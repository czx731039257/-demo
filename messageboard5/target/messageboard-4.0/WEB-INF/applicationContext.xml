<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--6 容器自动扫描IOC组件  -->
    <context:component-scan base-package="com.csx.demo2"></context:component-scan>
    <context:property-placeholder location="/WEB-INF/db.properties"/>


    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxIdle" value="20"></property>
        <property name="maxActive" value="30"></property>
    </bean>

    <!--3 会话工厂bean sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 别名 -->
        <property name="typeAliasesPackage" value="com.zhangguo.bookstore.entities"></property>
        <!-- sql映射文件路径 -->
        <property name="mapperLocations" value="classpath:com/csx/demo2/mapper/*Mapper.xml"></property>
    </bean>

    <!--4 自动扫描对象关系映射 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 指定要自动扫描接口的基础包，实现接口 -->
        <property name="basePackage" value="com.csx.demo2.dao"></property>
    </bean>

    <!--5 声明式事务管理 -->
    <!--定义事物管理器，由spring管理事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--支持注解驱动的事务管理，指定事务管理器 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="maxUploadSize" value="5242440"></property>
    </bean>

    <!--shiro配置-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/message"/>
        <property name="unauthorizedUrl" value="/login"/>
        <property name="filterChainDefinitions">

            <!--anon表示可以匿名访问  logout表示用户注销 authoc表示需要登入认证-->
            <value>
                /login = anon
                /LoginController = anon
                /CancelUserController = logout
                /** = authc
            </value>
        </property>
    </bean>

    <!--安全管理器的配置-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 单realm应用。如果有多个realm，使用‘realms’属性代替 -->
        <!--配置缓存管理器-->
        <property name="cacheManager" ref="cacheManager"/>
        <!--配置自定义认证器-->
        <property name="authenticator" ref="authenticator"></property>
    </bean>

    <!--缓存管理器-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"/>

    <!--自定义认证器-->
    <bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
        <!--配置realms-->
        <property name="realms" ref="Realm"/>
        <!--配置认证策略-->
        <!--<property name="authenticationStrategy" ref="allSuccessfulStrategy"/>-->
    </bean>
    <!--认证策略-->
    <!--<bean id="allSuccessfulStrategy" class="org.apache.shiro.authc.pam.AllSuccessfulStrategy"/>-->


    <bean id="Realm" class="com.csx.demo2.realm.MyRealm">
        <!--配置加密器-->
        <!--<property name="credentialsMatcher" ref="credentialsMatcher" />-->
    </bean>

    <!--加密器-->
    <!--<bean id="credentialsMatcher"-->
    <!--class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
    <!--&lt;!&ndash;配置加密方式&ndash;&gt;-->
    <!--<property name="hashAlgorithmName" value="MD5" />-->
    <!--<property name="storedCredentialsHexEncoded" value="true" />-->
    <!--&lt;!&ndash;配置加密次数&ndash;&gt;-->
    <!--<property name="hashIterations" value="1024" />-->
    <!--</bean>-->


</beans>